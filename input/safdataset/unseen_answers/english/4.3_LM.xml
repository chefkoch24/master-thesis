<?xml version='1.0' encoding='utf-8'?>
<question id="4.3_LM">
  <questionText>Please explain the problem with "Distributed Queue Dual Buses" that was discussed in the lecture in 1-3 sentences.</questionText>
  <referenceAnswers>
    <referenceAnswer id="4.3_LM.a1">Depending on your position in the bus station have a disadvantage/advantage when reserving transmission rights.</referenceAnswer>
  </referenceAnswers>
  <studentAnswers>
    <studentAnswer id="4.3_LM.70">
      <response>Before sending data from Node A to Node B, A has to reserve a frame in the bus where A comes after B. Outer nodes are restricted to sending only in one direction, while nodes in the middle may make reservations in both directions and thus have a higher chance to get a reservation.</response>
      <response_feedback>The response is partially correct as the nodes located close to the generator have a higher chance of getting a reservation rather than the "middle" node. So unidirectional or bidirectional alone does not decide fairness.</response_feedback>
      <score>0.5</score>
      <verification_feedback>Partially correct</verification_feedback>
    </studentAnswer>
    <studentAnswer id="4.3_LM.87">
      <response>The problem with DQDB is that if we have several participants in the network and they want to exchange data, the distance between them and the propagation delay causes a fairness issue. This is because when stations are closer together, they can communicate over the bus faster than stations further away, this would still be acceptable for normal data packets, but network control packets are also sent over the bus and so network changes can spread much slower than in other architectures.</response>
      <response_feedback>The response correctly states the fairness issue in DQDB and also provides an appropriate reason for it.</response_feedback>
      <score>1.0</score>
      <verification_feedback>Correct</verification_feedback>
    </studentAnswer>
    <studentAnswer id="4.3_LM.168">
      <response>The problem with DQDB is that there is a difference in fairness depending on the location, as not everyone has the same access to data.</response>
      <response_feedback>The response correctly identifies the fairness issue in DQDB which is due to the location of station.</response_feedback>
      <score>1.0</score>
      <verification_feedback>Correct</verification_feedback>
    </studentAnswer>
    <studentAnswer id="4.3_LM.200">
      <response>The problem with the “Distributed Queue Dual Buses” is that it does not ensure fairness. The location of the node has an influence on its likelihood of gaining access to the data or acquiring the right to send, which results in an inequality between the nodes.

At the beginning of a bus all frames generated by the frame generator are empty. So the first node can reserve however many frames it wants. At the end of the bus it can happen that all frames are already reserved so the last nodes may not be able to send anything.</response>
      <response_feedback>The response is correct as it correctly explains the fairness problem with Distributed Queue Dual Buses.</response_feedback>
      <score>1.0</score>
      <verification_feedback>Correct</verification_feedback>
    </studentAnswer>
    <studentAnswer id="4.3_LM.230">
      <response>The Distributed Queue Dual Bus (DQDB) architecture uses two unidirectional buses for sending and receiving data. The main challenge here ist to guarentee fairness between all participating nodes as different nodes may have advantages (if at the beginning of the bus) or disadvantages (if at the end of the bus) in write access depending on their position in the bus.</response>
      <response_feedback>The response correctly states and explains the fairness problem of reserving transmission right in DQDB.</response_feedback>
      <score>1.0</score>
      <verification_feedback>Correct</verification_feedback>
    </studentAnswer>
    <studentAnswer id="4.3_LM.243">
      <response>Depending on the stations location in the network, they might be able to more easily reserve bandwidth on the BUS for sending data. Stations which are farther back will have less opportunities for reserving a BUS than stations at the front.
This can be fixed by introducing some formulas describing how often each station can reserve a BUS.</response>
      <response_feedback>The response is correct as it correctly states the issue with Distributed Queue Dual Buses.</response_feedback>
      <score>1.0</score>
      <verification_feedback>Correct</verification_feedback>
    </studentAnswer>
    <studentAnswer id="4.3_LM.248">
      <response>The problem that was discussed in the lecture is fairness. The nodes reserve slots on one bus and send on the other bus. One node might reserve a lot of the available slots which makes it hard for the following nodes to reserve the space they need.</response>
      <response_feedback>The response correctly identifies the problem associated with Distributed Queue Dual Buses based on the station location.</response_feedback>
      <score>1.0</score>
      <verification_feedback>Correct</verification_feedback>
    </studentAnswer>
    <studentAnswer id="4.3_LM.270">
      <response>Distributed Queue Dual Buses have a fairness problem, meaning that dependent on the position of the node it will be advantaged or disadvantaged for certain comunications, as each bus only works in one direction and frames have to be requested.</response>
      <response_feedback>The response correctly states the problem in DQDB and gives an appropriate reason for it.</response_feedback>
      <score>1.0</score>
      <verification_feedback>Correct</verification_feedback>
    </studentAnswer>
    <studentAnswer id="4.3_LM.291">
      <response>The problem with DQDB Architecture is that the waiting time for a node to be allowed to send is heavily dependant on its location in the queue.If you are location on any far end of a bus (extrem right  or extrem left) then you will have to wait the most before you can send, if you want to send in the opposite direction.</response>
      <response_feedback>The response correctly explains the fairness problem with Distributed Queue Dual Buses.</response_feedback>
      <score>1.0</score>
      <verification_feedback>Correct</verification_feedback>
    </studentAnswer>
    <studentAnswer id="4.3_LM.296">
      <response>Distributed Queue Dual Buses = 2 buses (transfer data in opposing directions), every node connected to both buses

Distributed Queue Dual Buses is an architecture whereby every node is connected to 2 buses (write and read access). These buses are responsible for data transmission in opposing directions. The problem is because of transmission of data:

Both buses are connected to a frame generator which generate a fixed size frame every 125 milliseconds. Depending on the position of the nodes in the bus they can reserve the bus for sending data with a higher probability. E.g. for a node in the middle we have a probability of 50% to successfully reserve a bus. As a consequence, fairness is a problem due to the bus topology: Depending on the position of the node the node may be more or less successful in reserving a bus for data transmission.</response>
      <response_feedback>The response correctly explains the fairness problem of reserving transmission rights in DQDB.</response_feedback>
      <score>1.0</score>
      <verification_feedback>Correct</verification_feedback>
    </studentAnswer>
  </studentAnswers>
</question>
