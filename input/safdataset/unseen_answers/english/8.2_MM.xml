<?xml version='1.0' encoding='utf-8'?>
<question id="8.2_MM">
  <questionText>WHAT is the purpose of Reverse Path Forwarding and Reverse Path Broadcast? HOW do they work?</questionText>
  <referenceAnswers>
    <referenceAnswer id="8.2_MM.a1">Purpose: Both implement a more efficient kind (in terms of duplicate packets) of broadcasting than flooding / to minimize the number of duplicate packets in the network when broadcasting.

Reverse Path Forwarding:  Each node has a routing table stemming from unicast routing algorithms. When receiving a packet of sender S from neighbor N at node X, check the routing table and only forward the packet to all adjacent nodes (except for N) when you would send packets to S over N → the assumption is that the packet used the BEST route until now.
Reverse Path Broadcast: Nodes monitor unicast traffic to learn which paths in the network they are a part of, that is node X knows that is on the best path between two nodes A and B if it receives unicast packets coming from A and going to B or visa versa. In other words, each node knows which spanning trees it is part of in the network. Reverse Path Broadcasting works identical to Reverse Path Forwarding with the exception that it only forwards packets on edges that are part of a spanning tree (again excluding the incoming line to N).</referenceAnswer>
  </referenceAnswers>
  <studentAnswers>
    <studentAnswer id="8.2_MM.25">
      <response>The Reverse Path Forwarding guarantees that the Packet used the best route when this packet arrived at the IS entry port. Reverse Path Broadcast is based on RPF  to suitable reduce of Overhead. RPF (for a packet arriving at an IS)  -Has this packet arrived at the IS entry port   over which the packets for this station/source are usually also sent?    Yes:  -Assumption:   Packet used the BEST route until now  -Action:     resend over all edges (not including the incoming one)     No:  -Assumption:   Packet did NOT use this route (it is NOT the best route)  -Action:     discard packet (most likely duplicate)  RPB: -Has this packet arrived at the IS entry port   over which the packets for this station/source are usually also sent?    Yes:  -Packet used the BEST route until now?    -YES: select the edge at which the packets arrived and from which they are then rerouted to source S (in reversed direction)  -NO: DO NOT send over all edges (without the incoming one),  i.e., not as in Reverse Path Forwarding (RPF)     No:  -discard packet (most likely duplicate)</response>
      <response_feedback>The response correctly explains RPF and RPB but it lacks the purpose. The purpose of both algorithms is to minimize the number of duplicate packets during broadcasting.</response_feedback>
      <score>0.8</score>
      <verification_feedback>Partially correct</verification_feedback>
    </studentAnswer>
    <studentAnswer id="8.2_MM.41">
      <response>Reverse Path Forwarding: Used for ensuring loop-free forwarding of multicast packets in multicast routing and to help prevent IP address spoofing in unicast routing.  Checks if the packet arrived at the IS entry port over which the packets for this station/source are usually sent. If packet is assumed taking the best route: resend over all edges (not including the incoming one). If packet is assumed not taking the best route: discard packet.  Reverse Path Broadcast: Used to check if the set of shortest paths to a node forms a tree that spans the network.  If the packet arrives at the IS entry over which the packets for this station/source are usually sent: Checks if Packet used the BEST route until now: if yes, select the edge at which the packets arrived and from which they are then rerouted to source. If no, do not send over all edges (without the incoming one). If the packet is not for this station/source: discard packet.</response>
      <response_feedback>The purpose of the RPB algorithm is missing in the response. Additionally, the purpose is not limited to unicast and multicast but instead used widely in broadcast too.</response_feedback>
      <score>0.9</score>
      <verification_feedback>Partially correct</verification_feedback>
    </studentAnswer>
    <studentAnswer id="8.2_MM.42">
      <response>-prevent routing loops/ cycles in the network   RPF: -each node has a route to every other node -each node only forwards a broadcast packet received from the same port used to send packets back towards the sender -so the packet is forwarded only if it comes from the same route that would be used to reply to the source   RPB: -improvement of RPF If the packet arrived at the IS entry over which the packets for this station/source S are usually also sent and packet used the best route until, then select the edge at which the packets arrived and from which they are then rerouted to source S in reversed direction, if it’s not the best route then not send over all edges without the incoming one. -if not then discard packet.</response>
      <response_feedback>The response is partially correct as the explanation of RPF incorrectly states that "each node has a route to every other node" and also does not state over which links the packet are forwarded in RPF. The purpose and explanation for RPB are correct.</response_feedback>
      <score>0.8</score>
      <verification_feedback>Partially correct</verification_feedback>
    </studentAnswer>
    <studentAnswer id="8.2_MM.132">
      <response>Reverse Path Forwarding and Reverse Path Broadcasting are both algorithms used for loop-free multi- and broadcast communication and therefore aim to be more efficient than simple attempts like flooding or individual sending of packets to every destination in the network. The idea of both algorithms is the use of so called “spanning trees” for each individual node in the network, which contain routes to every subnode in every subnetwork. Since one intermediary system does only know his own spanning tree, but not the ones of the surrounding nodes, each router has to use its knowledge of optimal routing for certain destinations as a criterion for further transmission. For Reverse Path Forwarding this means, that each node has to check the link on which an incoming packet is received. If this link is the optimal one, over which packets for this station are also usually sent, then node can assume that the packet has taken an optimal way up to it. As a consequence, it then re-sends the packet over all of its edges, but not the one on which the packet was received. If the packet on the other hand does not come over such an “optimal” link it gets discarded.  Since re-sending over all edges seems not to be the most efficient way of multicast-routing, Reverse Path Broadcast introduces a further check for packets that arrive over the optimal link as well as a limited re-transmission of packets: If a packet has taken the optimal path until this station, the station reroutes the packet over the optimal incoming link to the Source in reversed direction. This means, that the receiving node looks up in its routing table over which link such a packet would normally be received. Exactly this link is then used for rerouting the packet to the source instead of using all links as it is done before in Reverse Path Forwarding. Otherwise (so to say if the packet is not received on an optimal link or received on an optimal link, but has not taken an optimal path so far), the packet is not resent. This mechanism is implemented to limit the number of duplicates in the network - while Reverse Path Forwarding retransmits over all edges (excluding the one on which the packet was received), Reverse Path Broadcasting chooses the most suitable link for retransmission.</response>
      <response_feedback>The response correctly explains RPF and RPB and their purpose.</response_feedback>
      <score>1.0</score>
      <verification_feedback>Correct</verification_feedback>
    </studentAnswer>
    <studentAnswer id="8.2_MM.135">
      <response>The PURPOSE of these two algorithms is the EFFICIENT (e.g. compared to flooding) execution of BROADCAST ROUTING, i.e. the sending of packets to all other hosts in the subnet. MODE OF OPERATION: Both are based on the idea of the Spanning Tree to use the shortest possible paths from the sender to the receivers. _RPF_ FORWARDS A BROADCAST PACKET arriving on one link over all other links ONLY IF IT ARRIVES OVER A LINK OVER WHICH, according to its own routing table, PACKETS ARE ALSO ROUTED TO THE SENDER OF THE BROADCAST (i.e. it is assumed that the packet arrived on the best path), OTHERWISE THE PACKET IS DISCARDED. _RPB_ differs from _RPF_ in the way it forwards packets: A PACKET IS ONLY FORWARDED TO A DIRECT NEIGHBOURING NODE IF THE FORWARDING NODE WOULD ALSO BE LOCATED ON A UNICAST PATH BETWEEN THE SENDER AND THAT NEIGHBOURING NODE. For example, if a node B receives a broadcast packet from A and B has links with C and D, but has previously learned that no packets are routed from A to C via B, but to D via B, then it will not forward the packet to C (unlike _RPF_), but only to D. This further reduces the number of messages compared to _RPF_.</response>
      <response_feedback>The response correctly answers the purpose and the explanation for both broadcast types.</response_feedback>
      <score>1.0</score>
      <verification_feedback>Correct</verification_feedback>
    </studentAnswer>
    <studentAnswer id="8.2_MM.136">
      <response>They are techniques to forward multicast packets in networks. They use information the IS has about the network structure (derived from normal unicast packets) to guess where to send the multicast packets. If a packet in RPF arrives over the "usual" path over which the sender sends, the IS will distribute(flood) the network with the packet. If the packet arrives not over the usual path, the packet will be dropped. In RPB, if the packet arrives over the "usual" path, the IS will send it over the path that unicast packets "usually" take and not flood the network. If the packet arrives not over the usual path, the packet will be dropped.</response>
      <response_feedback>The response is partially correct because it lacks the purpose of both algorithms which is to minimize the number of duplicate packets during broadcasting. In both algorithms, the packet is also not forwarded to the edge from which it was received.</response_feedback>
      <score>0.7</score>
      <verification_feedback>Partially correct</verification_feedback>
    </studentAnswer>
    <studentAnswer id="8.2_MM.148">
      <response>Reverse Path Forwarding and Reverse Path Broadcast are used in broadcasting, to enable loop-free by verifying the reachability of the destination. That way each IS will know its multicast tree RPF :  ALGORITHM : Check if the packet that arrived at the IS entry port over which the packets for this source are usually also sent. If yes, an assumption can be made that the packet used the best route. Then the packets will be resent over other edges (not including the incoming one) if no, assume the packet did not use the best route. Then this packet will be discarded. RPB : ALGORITHM :  Check if the packet that arrived at the IS entry port over which the packets fort this source are usually also sent. If yes, check if the packet used the best route. * If yes, select the edge at which the packets arrived and from which they are then rerouted to the source * If no, do not send over all the edges (without the incoming one) If no, the packet is discarded.</response>
      <response_feedback>The response correctly explains RPF and RPB and their purpose.</response_feedback>
      <score>1.0</score>
      <verification_feedback>Correct</verification_feedback>
    </studentAnswer>
    <studentAnswer id="8.2_MM.169">
      <response>Reverse Path Forwarding: - Purpose: reduce traffic in broadcasting compared to flooding. In Reverse Path Forwarding, a sender only sends an incoming packet to all of its adjacent nodes if it has arrived over the edge that is considered to be part of the shortest path between that node and the source. Otherwise, the packet is ignored. Reverse Path Broadcasting: - Purpose: further reduce traffic compared to Reverse Path Forwarding. In Reverse Path Broadcasting, if a packet has arrived over the edge which is usually used for sending packets to the source, it is only forwarded to those neighbors, which usually route unicast messages to the sender via that node. So a router only spreads packets to a neighbor if it is on the shortest path between that neighbor and the source.</response>
      <response_feedback>The response correctly answers all three parts of the question. However, the purpose of minimizing the number of duplicate packets in the network is not explicitly stated in the response.</response_feedback>
      <score>1.0</score>
      <verification_feedback>Correct</verification_feedback>
    </studentAnswer>
    <studentAnswer id="8.2_MM.190">
      <response>Reverse Path Forwarding (RPF) and Reverse Path Broadcast (RPB) are algorithms that are used to distribute packets with more than one receiver in a network. Simple approaches are individual sending to every destination or flooding. These simple approaches aren’t optimal for distributing packets to n receivers. In RPF each router has information which path it would use for unicast packets. If a router receives a package, it checks whether it received the package via the optimal route, and only forwards it to every other reachable router (except from the router it received the package from). In RPB however, packages are only forwarded according to the routing tables (via the best routes), thus reducing the load of the network.</response>
      <response_feedback>The response does not state why RPF and RPB are more optimal than flooding. The explanation for RPF is correct. The explanation for RPB is incomplete as the answer does not specify what "according to the routing tables" / "via the best routes" means.</response_feedback>
      <score>0.6</score>
      <verification_feedback>Partially correct</verification_feedback>
    </studentAnswer>
    <studentAnswer id="8.2_MM.216">
      <response>Reverse Path Forwarding is an algorithm to allow loop free forwarding of packets (especially for multicast). The source IP of an incoming packet is looked up in the routing table. If the packet would be send on this interface if the source IP would be the destination, the packet is forwarded on all edges but the incoming one. Packets that don't arrive via the shortest route may be ignored. Reverse Path Broadcast is also used for loop free forwarding and works similar to RPF. Though it does not send the packets out on all edged but selects those edges that are on the shortest path (in reverse) to the source of the multicast packet.</response>
      <response_feedback>The explanation of RPF is partially correct because the packets which did not use the best route will be discarded and not maybe discarded.</response_feedback>
      <score>0.8</score>
      <verification_feedback>Partially correct</verification_feedback>
    </studentAnswer>
    <studentAnswer id="8.2_MM.220">
      <response>Reverse path forwarding prevents multicast traffic from entering routing loops by looking up a table which holds all routers the multicast packet already visited. The packet is then forwarded to all routers that are not in the table. Reverse path broadcast is an extension of RPF: in this case packets are only forwarded to this interfaces, where the next router is on the shortest path to data origin.</response>
      <response_feedback>The response correctly identifies the purpose of RPF but the provided explanation is incorrect. In RPF, the packet used the unicast information stored in the routing table to check whether the broadcasted packet took the same route that it would have taken to send a unicast packet in the reverse direction. No explanation is provided as to what forms the shortest route in RPB.</response_feedback>
      <score>0.4</score>
      <verification_feedback>Partially correct</verification_feedback>
    </studentAnswer>
    <studentAnswer id="8.2_MM.228">
      <response>The purpose is to reduce that overall network usage, and not produce unneeded traffic. You only send out the gotten packet if it came from a router you would route through to the sender, otherwise the packet gets droped as it can not be the optimal path.</response>
      <response_feedback>While both algorithms reduce traffic, the main purpose is to minimize duplicate packets during broadcasting. Also, it's unclear to which algorithm the given description is explaining.</response_feedback>
      <score>0.0</score>
      <verification_feedback>Incorrect</verification_feedback>
    </studentAnswer>
    <studentAnswer id="8.2_MM.348">
      <response>In both,Packet used the BEST route with specific selection of the outgoing links. Reverse Path Forwarding:Packet used the best route and resend over all adjacent edges (not including the incoming one). Reverse Path Broadcast:Packet uses the best route and sends packet to adjacent nodes but select the edge at which the packets arrived and from which they are then rerouted to source in reversed direction and include the arrival node.</response>
      <response_feedback>The response explains the difference between the two correctly. The response does not state the purpose behind using the algorithms, namely to reduce duplicates in the broadcast. While both use the best route, how these routes are known is not explained.</response_feedback>
      <score>0.4</score>
      <verification_feedback>Partially correct</verification_feedback>
    </studentAnswer>
  </studentAnswers>
</question>
